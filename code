echo "# abs_census" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/mmarzandataguy/abs_census.git
git push -u origin main


library(readxl)
library(dplyr)
library(purrr)
library(tools)
library(writexl)

# Helper function to read the specific sheet from the downloaded file
get_seifa_index_sheet <- function(filename, sheet_name, structure, year) {
  df <- read_excel(filename, sheet = sheet_name, skip = 5)  # Adjust skip based on the header rows
  df <- df %>%
    mutate(Structure = structure, Year = year) %>%
    rename_with(~ gsub("\\s+", "_", .)) # Replace spaces in column names with underscores
  return(df)
}

# Main function to get SEIFA measures and save to different files
get_seifa <- function(structures = c('sa1', 'sa2', 'lga', 'postcode', 'suburb'),
                      data_subclasses = c('irsed', 'irsead', 'ier', 'ieo'),
                      years = c(2011, 2016, 2021),
                      output_dir = getwd()) {
  release_years <- c(2011, 2016, 2021)
  
  stopifnot(all(data_subclasses %in% c('irsed', 'irsead', 'ier', 'ieo')))
  
  # Match excel sheet names to data_subclass
  sheet_names <- c('irsed' = 'Table 2',
                   'irsead' = 'Table 3',
                   'ier' = 'Table 4',
                   'ieo' = 'Table 5')
  
  sheet_names <- sheet_names[data_subclasses]
  
  # Match spatial structures to specific URLs
  urls <- list(
    '2011' = c('sa1' = 'https://www.abs.gov.au/AUSSTATS/subscriber.nsf/log?openagent&2033.0.55.001%20sa1%20indexes.xls&2033.0.55.001&Data%20Cubes&9828E2819C30D96DCA257B43000E923E&0&2011&05.04.2013&Latest',
               'sa2' = 'https://www.abs.gov.au/AUSSTATS/subscriber.nsf/log?openagent&2033.0.55.001%20SA2%20Indexes.xls&2033.0.55.001&Data%20Cubes&76D0BC44356DC34ACA257B3B001A4913&0&2011&12.11.2014&Latest',
               'lga' = 'https://www.abs.gov.au/AUSSTATS/subscriber.nsf/log?openagent&2033.0.55.001%20lga%20indexes.xls&2033.0.55.001&Data%20Cubes&28EF8569335AC7CDCA257BAB00136B0F&0&2011&18.07.2013&Latest',
               'postcode' = 'https://www.abs.gov.au/AUSSTATS/subscriber.nsf/log?openagent&2033.0.55.001%20POA%20Indexes.xls&2033.0.55.001&Data%20Cubes&209B3364525C82CCCA257B3B001A4D56&0&2011&12.11.2014&Latest',
               'suburb' = 'https://www.abs.gov.au/AUSSTATS/subscriber.nsf/log?openagent&2033.0.55.001%20ssc%20indexes.xls&2033.0.55.001&Data%20Cubes&F40D0630B245D5DCCA257B43000EA0F1&0&2011&05.04.2013&Latest'),
    
    '2016' = c('sa1' = 'https://www.abs.gov.au/ausstats/subscriber.nsf/log?openagent&2033055001%20-%20sa1%20indexes.xls&2033.0.55.001&Data%20Cubes&40A0EFDE970A1511CA25825D000F8E8D&0&2016&27.03.2018&Latest',
               'sa2' = 'https://www.abs.gov.au/ausstats/subscriber.nsf/log?openagent&2033055001%20-%20sa2%20indexes.xls&2033.0.55.001&Data%20Cubes&C9F7AD36397CB43DCA25825D000F917C&0&2016&27.03.2018&Latest',
               'lga' = 'https://www.abs.gov.au/ausstats/subscriber.nsf/log?openagent&2033055001%20-%20lga%20indexes.xls&2033.0.55.001&Data%20Cubes&5604C75C214CD3D0CA25825D000F91AE&0&2016&27.03.2018&Latest',
               'postcode' = 'https://www.abs.gov.au/ausstats/subscriber.nsf/log?openagent&2033055001%20-%20poa%20indexes.xls&2033.0.55.001&Data%20Cubes&DC124D1DAC3D9FDDCA25825D000F9267&0&2016&27.03.2018&Latest',
               'suburb' = 'https://www.abs.gov.au/ausstats/subscriber.nsf/log?openagent&2033055001%20-%20ssc%20indexes.xls&2033.0.55.001&Data%20Cubes&863031D939DE8105CA25825D000F91D2&0&2016&27.03.2018&Latest'),
    
    '2021' = c('sa1' = 'https://www.abs.gov.au/statistics/people/people-and-communities/socio-economic-indexes-areas-seifa-australia/2021/Statistical%20Area%20Level%201%2C%20Indexes%2C%20SEIFA%202021.xlsx',
               'sa2' = 'https://www.abs.gov.au/statistics/people/people-and-communities/socio-economic-indexes-areas-seifa-australia/2021/Statistical%20Area%20Level%202%2C%20Indexes%2C%20SEIFA%202021.xlsx',
               'lga' = 'https://www.abs.gov.au/statistics/people/people-and-communities/socio-economic-indexes-areas-seifa-australia/2021/Local%20Government%20Area%2C%20Indexes%2C%20SEIFA%202021.xlsx',
               'postcode' = 'https://www.abs.gov.au/statistics/people/people-and-communities/socio-economic-indexes-areas-seifa-australia/2021/Postal%20Area%2C%20Indexes%2C%20SEIFA%202021.xlsx',
               'suburb' = 'https://www.abs.gov.au/statistics/people/people-and-communities/socio-economic-indexes-areas-seifa-australia/2021/Suburbs%20and%20Localities%2C%20Indexes%2C%20SEIFA%202021.xlsx')
  )
  
  for (year in years) {
    for (structure in structures) {
      url <- urls[[as.character(year)]][structure]
      
      # Get file extension if possible, otherwise assume xls.
      url_ext <- tools::file_ext(sub("\\?.+", "", url))
      if (url_ext == "") {
        url_ext <- 'xls'
      }
      
      filename <- tempfile(fileext = paste0('.', url_ext))
      
      try({
        download.file(url, destfile = filename, mode = 'wb')
        message(paste0('ABS ', toupper(structure), ' file downloaded to: \n',
                       '    ', filename),
                appendLF = TRUE)
      })
      
      if (file.exists(filename)) {
        # Read and process each sheet
        sheet_data_list <- map(sheet_names, ~ get_seifa_index_sheet(filename, .x, structure, year), .id = 'seifa_index')
        
        # Display the column names to inspect the actual names
        message("Column names: ", paste(names(sheet_data_list[[1]]), collapse = ", "))
        
        # Filter data for VIC only based on the actual column name from the screenshot
        sheet_data_list <- lapply(sheet_data_list, function(df) {
          df %>% filter(State == "VIC")
        })
        
        # Remove columns 13, 14, and 15 if they exist
        sheet_data_list <- lapply(sheet_data_list, function(df) {
          if (ncol(df) >= 15) {
            df <- df[ , -c(13, 14, 15)]
          }
          return(df)
        })
        
        # Save to Excel with different sheets
        output_file <- file.path(output_dir, paste0("SEIFA_", structure, "_", year, "_VIC.xlsx"))
        write_xlsx(sheet_data_list, output_file)
        message(paste0('Data for ', toupper(structure), ' in ', year, ' saved to: ', output_file))
      } else {
        warning('Download of ABS file failed. Please check your internet connection and try again.')
      }
    }
  }
}

# Example usage
output_directory <- "path/to/your/folder" # Replace with your desired directory path
get_seifa(structures = c('sa1', 'sa2', 'postcode', 'suburb'), data_subclasses = c('irsed', 'irsead', 'ier', 'ieo'), years = c(2011, 2016, 2021), output_dir = output_directory)
